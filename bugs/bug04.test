self.p_int[1] = 13 
self.p_int[2] = 13 
self.p_int[0] = 7 
self.p_int[4] = 9 
self.p_int[5] = 14 
self.p_int[3] = 11 
self.p_int[6] = 4 
self.p_node[1] = Node(self.p_int[4]) 
self.p_node[5] = Node(self.p_int[2]) 
self.p_int[4] = 5 
self.p_int[2] = 15 
self.p_int[7] = 3 
self.p_node[2] = Node(self.p_int[2]) 
self.p_int[2] = 2 
self.p_node[4] = Node(self.p_int[2]) 
self.p_node[0] = Node(self.p_int[0]) 
self.p_tree[0] = RedBlackTree() 
self.p_node[6] = Node(self.p_int[4]) 
self.p_tree[0].add(self.p_int[5]) 
self.p_int[2] = 7 
self.p_node[7] = Node(self.p_int[3]) 
self.p_int[5] = 7 
self.p_node[3] = Node(self.p_int[2]) 
self.p_int[4] = 1 
self.p_tree[0].black_height(self.p_node[5]) 
self.p_tree[0] = RedBlackTree() 
self.p_int[0] = 13 
self.p_tree[0].insert(self.p_node[1]) 
self.p_tree[0].add(self.p_int[0]) 
self.p_node[1] = Node(self.p_int[7]) 
self.p_int[2] = 11 
self.p_int[0] = 13 
self.p_int[3] = 1 
self.p_tree[0].insert(self.p_node[0]) 
self.p_tree[0].search(self.p_int[5]) 
self.p_tree[0].delete(self.p_node[5]) 
self.p_tree[0].add(self.p_int[0]) 
self.p_int[5] = 8 
self.p_tree[0].delete(self.p_node[5]) 
self.p_tree[0].insert(self.p_node[3]) 
self.p_tree[0].inorder_walk() 
self.p_node[5] = Node(self.p_int[0]) 
self.p_node[3] = Node(self.p_int[4]) 
self.p_int[7] = 15 
self.p_int[0] = 9 
self.p_tree[0].black_height(self.p_node[5]) 
self.p_int[4] = 12 
self.p_tree[0].insert(self.p_node[6]) 
self.p_node[0] = Node(self.p_int[0]) 
self.p_node[5] = Node(self.p_int[2]) 
self.p_tree[0].black_height(self.p_node[1]) 
self.p_tree[0].black_height(self.p_node[0]) 
self.p_int[2] = 11 
self.p_node[1] = Node(self.p_int[5]) 
self.p_tree[0].search(self.p_int[5]) 
self.p_node[6] = Node(self.p_int[6]) 
self.p_node[0] = Node(self.p_int[1]) 
self.p_tree[0].black_height(self.p_node[6]) 
self.p_tree[0].insert(self.p_node[1]) 
self.p_int[6] = 2 
self.p_tree[0].search(self.p_int[7]) 
self.p_int[0] = 1 
self.p_tree[0].search(self.p_int[2]) 
self.p_tree[0].add(self.p_int[7]) 
self.p_int[7] = 7 
self.p_int[5] = 8 
self.p_tree[0].search(self.p_int[7]) 
self.p_int[2] = 9 
self.p_tree[0].search(self.p_int[7]) 
self.p_int[1] = 9 
self.p_tree[1] = RedBlackTree() 
self.p_tree[1].add(self.p_int[2]) 
self.p_tree[0].search(self.p_int[7]) 
self.p_tree[1].black_height(self.p_node[1]) 
self.p_tree[0].insert(self.p_node[1]) 
